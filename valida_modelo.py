# -*- coding: utf-8 -*-
"""Valida_Modelo.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1jX-lYOVIlFdv4j-MQeWwpGUrU1x4nGEr
"""

# -*- coding: utf-8 -*-


import torch
from torchvision import models, transforms, datasets
from PIL import Image
import matplotlib.pyplot as plt
import os
import random


import kagglehub
path = kagglehub.dataset_download("mohammadamireshraghi/blood-cell-cancer-all-4class")
data_dir = os.path.join(path, "Blood cell Cancer [ALL]")

model_save_path = "best_model_efficientnet_b0.pth"

num_classes = 4

classes = ["B-ALL", "Eosinophil", "Lymphocyte", "Monocyte"]


model = models.efficientnet_b0(weights=models.EfficientNet_B0_Weights.DEFAULT)
in_features = model.classifier[1].in_features
model.classifier[1] = torch.nn.Linear(in_features, num_classes)


model.load_state_dict(torch.load(model_save_path, map_location="cpu"))
model.eval()

print(" Modelo carregado com sucesso!")


transform = transforms.Compose([
    transforms.Resize((224, 224)),
    transforms.ToTensor(),
    transforms.Normalize([0.485, 0.456, 0.406],
                         [0.229, 0.224, 0.225])
])

classes = ["[Malignant] early Pre-B", "[Malignant] Pro-B", "[Malignant] Pre-B", "Benign"]

example_class = random.choice(classes)
example_folder = os.path.join(data_dir, example_class)
example_image = random.choice(os.listdir(example_folder))
img_path = os.path.join(example_folder, example_image)

print(f"Classe escolhida: {example_class}")
print(f"Imagem: {example_image}")

img = Image.open(img_path).convert("RGB")
img_t = transform(img).unsqueeze(0)

with torch.no_grad():
    outputs = model(img_t)
    _, pred = torch.max(outputs, 1)

predicted_class = classes[pred.item()]

plt.imshow(img)
plt.title(f"Classe prevista: {predicted_class}")
plt.axis("off")
plt.show()

print(f"Classe real: {example_class}")
print(f"Classe prevista pelo modelo: {predicted_class}")

import kagglehub
import os

print("Subp dentro:", data_dir)
print(os.listdir(data_dir))

import kagglehub
import os

path = kagglehub.dataset_download("mohammadamireshraghi/blood-cell-cancer-all-4class")

data_dir = os.path.join(path, "Blood cell Cancer [ALL]")

print("Dataset pronto em:", data_dir)
print("Subpastas:", os.listdir(data_dir))